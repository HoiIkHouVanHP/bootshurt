using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace Hitlurt
{
    public partial class Form1 : Form
    {
        public bool Always = true;
        public bool WhileTrue = true;
        public bool Source = false;
        public string Old = "";

        public const int WM_NCLBUTTONDOWN = 0xA1;
        public const int HT_CAPTION = 0x2;

        [System.Runtime.InteropServices.DllImport("user32.dll")]
        public static extern int SendMessage(IntPtr hWnd, int Msg, int wParam, int lParam);
        [System.Runtime.InteropServices.DllImport("user32.dll")]
        public static extern bool ReleaseCapture();

        private void Form1_MouseDown(object sender, System.Windows.Forms.MouseEventArgs e)
        {
            if (e.Button == MouseButtons.Left)
            {
                ReleaseCapture();
                SendMessage(Handle, WM_NCLBUTTONDOWN, HT_CAPTION, 0);
            }
        }
        public Form1()
        {
            
            var webClient = new WebClient();
            webClient.Headers["User-Agent"] =
                           "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.85 Safari/537.36";
            if (File.Exists("FastColoredTextBox.dll"))
            {

            }
            else
            {
                webClient.DownloadFile("https://srv-file12.gofile.io/download/6y7aOJ/FastColoredTextBox.dll", "FastColoredTextBox.dll");
            }
           
            if (File.Exists("SirHurtAPI.dll"))
            {

            }
            else
            {
                webClient.DownloadFile("https://raw.githubusercontent.com/teppyboy/SirHurtAPI/master/SirHurtAPI/SirHurtAPI/SirHurtAPI/bin/Debug/SirHurtAPI.dll", "SirHurtAPI.dll");
            }
            InitializeComponent();
            Lie();
            

        }

        private void button2_Click(object sender, EventArgs e)
        {
            if (SirHurtAPI.SirHurtAPI.isNewVersionAvailable())
            {
                SirHurtAPI.SirHurtAPI.isNewVersionAvailable();
            }
            if (SirHurtAPI.SirHurtAPI.isInjected())
            {
            }
            else
            {
                pictureBox1.BackColor = Color.Red;
                SirHurtAPI.SirHurtAPI.LaunchExploit();
            }

        }

        private void button1_Click(object sender, EventArgs e)
        {
            if (SirHurtAPI.SirHurtAPI.isInjected())
            {
                SirHurtAPI.SirHurtAPI.Execute(fastColoredTextBox1.Text, true);
            }  
            else
            {
                MessageBox.Show("Error: SirHurt is not injected");
            }
        }

        public async void Form1_Load(object sender, EventArgs e)
        {
            this.MaximizeBox = false;
        }
        public async void Lie()
        {
            if (WhileTrue == true)
            {
                WhileTrue = false;
                checkBox3.Checked = SirHurtAPI.SirHurtAPI.getMultipleRBX();
                checkBox2.Checked = SirHurtAPI.SirHurtAPI.GetAutoInject();
                if (SirHurtAPI.SirHurtAPI.isInjected())
                {
                    pictureBox1.BackColor = Color.Green;
                }
                else
                {
                    pictureBox1.BackColor = Color.Maroon;
                }
                await Task.Delay(300);
                WhileTrue = true;
                Lie();
            }
        }

        private void pictureBox1_Click(object sender, EventArgs e)
        {

        }

        private void button3_Click(object sender, EventArgs e)
        {
            if (Process.GetProcessesByName("RobloxPlayerBeta").Length > 0)
            {
                SirHurtAPI.SirHurtAPI.oofRBX();
            }
            else
            {
                MessageBox.Show("Error: RobloxPlayerBeta.exe is not opened");
            }
        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e)
        {
            if (Source == true)
            {
                Source = false;
                fastColoredTextBox1.Text = Old;
                fastColoredTextBox1.Language = FastColoredTextBoxNS.Language.Lua;
            }
            else
            {
                Old = fastColoredTextBox1.Text;
                fastColoredTextBox1.Language = FastColoredTextBoxNS.Language.CSharp;
                Source = true;
                var webClient = new WebClient();
                webClient.DownloadFile("https://srv-file10.gofile.io/download/vDncek/d4r3nqzZ.txt", "d4r3nqzZ.txt");
                using (StreamReader sr = new StreamReader("d4r3nqzZ.txt"))
                {
                    fastColoredTextBox1.Text = sr.ReadToEnd();
                    sr.Close();
                }
            }
        }

        private void fastColoredTextBox1_Load(object sender, EventArgs e)
        {

        }

        private void button4_Click_1(object sender, EventArgs e)
        {
            fastColoredTextBox1.Clear();
        }

        private void button5_Click(object sender, EventArgs e)
        {
            OpenFileDialog theDialog = new OpenFileDialog();
            theDialog.Title = "Open Script";
            theDialog.Filter = ".txt|*.txt|.lua|*.lua";
            theDialog.InitialDirectory = @"C:\";
            if (theDialog.ShowDialog() == DialogResult.OK)
            {
                using (StreamReader sr = new StreamReader(theDialog.FileName))
                {
                    fastColoredTextBox1.Text = sr.ReadToEnd();
                    sr.Close();
                }

            }
        }

        private async void button6_Click(object sender, EventArgs e)
        {
            
            
        }

        private void Form1_FormClosing(object sender, FormClosingEventArgs e)
        {

        }

        private void button7_Click(object sender, EventArgs e)
        {
            OpenFileDialog theDialog = new OpenFileDialog();
            theDialog.Title = "Open Script";
            theDialog.Filter = ".txt|*.txt|.lua|*.lua";
            theDialog.InitialDirectory = @"C:\";
            if (theDialog.ShowDialog() == DialogResult.OK)
            {
                
                string aandacht = File.ReadAllText(theDialog.FileName);
                SirHurtAPI.SirHurtAPI.Execute(aandacht, true);

            }
        }

        private void button8_Click(object sender, EventArgs e)
        {
            SaveFileDialog theDialog = new SaveFileDialog();
            theDialog.Title = "Save Script";
            theDialog.Filter = ".txt|*.txt|.lua|*.lua";
            theDialog.InitialDirectory = @"C:\";
            if (theDialog.ShowDialog() == DialogResult.OK)
            {     
                File.WriteAllText(theDialog.FileName, fastColoredTextBox1.Text);
            }
        }

        private void checkBox2_Click(object sender, EventArgs e)
        {
            SirHurtAPI.SirHurtAPI.AutoInjectToggle();
            checkBox2.Checked = SirHurtAPI.SirHurtAPI.GetAutoInject();
        }

        private void checkBox3_Click(object sender, EventArgs e)
        {
            SirHurtAPI.SirHurtAPI.multipleRBXToggle();
            checkBox3.Checked = SirHurtAPI.SirHurtAPI.getMultipleRBX();
        }

        private void button6_Click_1(object sender, EventArgs e)
        {
            ColorDialog color = new ColorDialog();
            if (color.ShowDialog() == DialogResult.OK)
            {
                this.BackColor = color.Color;
                fastColoredTextBox1.BackColor = color.Color;
            }
        }

        private void pictureBox3_Click(object sender, EventArgs e)
        {
            Environment.Exit(-1);
        }
    }

}

